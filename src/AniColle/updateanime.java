/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AniColle;

import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author JÃ¼lide
 */
public class updateanime extends javax.swing.JFrame {

    /**
     * Creates new form updateanime
     */String ptt;
      private adminpanel end;
      @SuppressWarnings("OverridableMethodCallInConstructor")    
    public updateanime(adminpanel gir) {
        this.end=gir;
        initComponents();
        forGenres();
        forseason();
        
    }

    private updateanime() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
   
     public void forGenres(){
    GenresQuery gr = new GenresQuery();
        Connection connect =  gr.getConnection();
        Statement st;
        ResultSet rs;
        
        try {
            connect = DriverManager.getConnection("jdbc:mysql://localhost:3306/anicolle?useUnicode=true&characterEncoding=UTF-8", "afrodeitt", "closemyeyes");
            st = connect.createStatement();
            rs = st.executeQuery("SELECT `genre_name` FROM `genres`");			//RETRIEVE THE CITY NAME AND CITY ID FROM THE DATABASE
            while(rs.next()){
                updategenres.addItem(rs.getString(1));						//ADD THE VALUES TO COMBOBOX AREA AS LIST
            }
        } catch (SQLException ex) {
            Logger.getLogger(updateanime.class.getName()).log(Level.SEVERE, null, ex);
        }}
     public ImageIcon ResizeImage(String imgPath){			//the method for resizing image
        ImageIcon MyImagee = new ImageIcon(imgPath);		//create an image icon
        Image imgg = MyImagee.getImage();					//define the image with getting from MyImage
        Image newwImage = imgg.getScaledInstance(animephoto.getWidth(), animephoto.getHeight(),Image.SCALE_SMOOTH);		//the default statement
        ImageIcon imagee = new ImageIcon(newwImage);		//create the image by image icon
        return imagee;
    }
    public void forseason(){//method
    MyQuery mq = new MyQuery();
        Connection connect =  mq.getConnection();
        Statement st;
        ResultSet rs;
        
        try {
            connect = DriverManager.getConnection("jdbc:mysql://localhost:3306/anicolle?useUnicode=true&characterEncoding=UTF-8", "afrodeitt", "closemyeyes");
            st = connect.createStatement();
            rs = st.executeQuery("SELECT `seasonname` FROM `season`");			//RETRIEVE THE CITY NAME AND CITY ID FROM THE DATABASE
            while(rs.next()){
                updateseason.addItem(rs.getString(1));						//ADD THE VALUES TO COMBOBOX AREA AS LIST
            }
        } catch (SQLException ex) {
            Logger.getLogger(updateanime.class.getName()).log(Level.SEVERE, null, ex);
        }}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        updateanimename = new javax.swing.JTextField();
        updatebutton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        updateplannedep = new javax.swing.JTextField();
        updategenres = new javax.swing.JComboBox<>();
        updateseason = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        animephoto = new javax.swing.JLabel();
        updatepic = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel6.setText("Genres");

        jLabel7.setText("Planned episode");

        updateanimename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateanimenameActionPerformed(evt);
            }
        });

        updatebutton.setText("UPDATE");
        updatebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebuttonActionPerformed(evt);
            }
        });

        jLabel12.setText("season");

        updategenres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updategenresActionPerformed(evt);
            }
        });

        updateseason.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateupdateseasonActionPerformed(evt);
            }
        });

        jLabel2.setText("Anime Name");

        updatepic.setText("Choose a Picture");
        updatepic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatepicActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(animephoto, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(updatepic)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updateanimename, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updategenres, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateplannedep, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(updateseason, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(updatebutton)
                            .addGap(72, 72, 72))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updateanimename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updategenres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updateplannedep, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updateseason, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(animephoto, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updatepic)
                            .addComponent(updatebutton))))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateanimenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateanimenameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateanimenameActionPerformed

    private void updatebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebuttonActionPerformed
String aniname=updateanimename.getText();
       String planned=updateplannedep.getText();
       String seasonn = (String)updateseason.getSelectedItem();
       String genree = (String)updategenres.getSelectedItem();
       
       
        try {
            InputStream is = new FileInputStream(new File(ptt));
            //GET COONECTION
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/anicolle?useUnicode=true&characterEncoding=UTF-8", "afrodeitt", "closemyeyes");
            //STATEMENT
             String sql = "UPDATE anime SET animephoto='" + is + "',animename='" + aniname + "', genre='" + genree + "', plannedep='" + planned + "', season='" + seasonn + "'  WHERE animename='" + aniname + "'";
            Statement s = con.prepareStatement(sql);
            //EXECUTE
            s.execute(sql);
           JOptionPane.showMessageDialog(null,"The information of "+aniname+" is updated.");
           
           
        } catch (SQLException ex) {
           Logger.getLogger(updatesanime.class.getName()).log(Level.SEVERE, null, ex);
            
        } catch (FileNotFoundException ex) {       
             Logger.getLogger(updateanime.class.getName()).log(Level.SEVERE, null, ex);
         }       
    }//GEN-LAST:event_updatebuttonActionPerformed

    private void updategenresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updategenresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updategenresActionPerformed

    private void updatepicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatepicActionPerformed
         javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser();          //create a new FileChooser structure for the image choice
         fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));    //set current directory
         FileNameExtensionFilter filter = new FileNameExtensionFilter("*.IMAGE", "jpg","gif","png","jpeg");      //set current filters
         fileChooser.addChoosableFileFilter(filter);          //add the file with its filters from file
         int result = fileChooser.showSaveDialog(null);         //save the image 
         if(result == javax.swing.JFileChooser.APPROVE_OPTION){             //if the approve the image
             File selectedFile = fileChooser.getSelectedFile();       //the selected file is identified as getting method
             String path = selectedFile.getAbsolutePath();          	//identify the selected file and define the path
             animephoto.setIcon(ResizeImage(path));                     	//set Icon from the file to page
            ptt=path;
            if(path==null){
                JOptionPane.showMessageDialog(null, "Please choose a photo");
            }else{
                JOptionPane.showMessageDialog(null, "Photo is added");
            }
              }
        else if(result == javax.swing.JFileChooser.CANCEL_OPTION){					// if the not choose the image
             JOptionPane.showMessageDialog(null, "No data");	
        }
    }//GEN-LAST:event_updatepicActionPerformed

    private void updateupdateseasonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateupdateseasonActionPerformed

    }//GEN-LAST:event_updateupdateseasonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(updateanime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(updateanime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(updateanime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(updateanime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new updateanime().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel animephoto;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField updateanimename;
    private javax.swing.JButton updatebutton;
    private javax.swing.JComboBox<String> updategenres;
    private javax.swing.JButton updatepic;
    private javax.swing.JTextField updateplannedep;
    private javax.swing.JComboBox<String> updateseason;
    // End of variables declaration//GEN-END:variables
}
