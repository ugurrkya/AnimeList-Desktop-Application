package AniColle;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Jülide
 */
public class updatesanime extends javax.swing.JFrame {

    /**
     * Creates new form updatesanime
     */
    private adminpanel tik;
    public updatesanime(adminpanel gec) {
        this.tik=gec;
        initComponents();
     updatee();
    }

    public void updatee(){
         try {
        Connection cd;
            cd = DriverManager.getConnection("jdbc:mysql://localhost:3306/anicolle?useUnicode=true&characterEncoding=UTF-8", "afrodeitt", "closemyeyes");
        Statement st = (Statement) cd.createStatement();
        try(ResultSet rs = st.executeQuery("Select `animename`,`studio`, `genre`, `season`,`type`,`producer`, `source`, `plannedep`,`currentep` `country`, `duration` from anime")) { //connect to database table
            int colcount = rs.getMetaData().getColumnCount(); //take columns from database as have how much columns and put on these things
            DefaultTableModel tm = new DefaultTableModel(); //creating model
            for(int i = 1;i<=colcount;i++)
                tm.addColumn(rs.getMetaData().getColumnName(i)); //Adding columns to table by names which are the same as database
            while(rs.next())
                {
                    Object[] row = new Object[colcount];				//put data on these columns 
                    for(int i=1;i<=colcount;i++)
                        row[i-1] = rs.getObject(i);						//from index 0 to index i-1
                    tm.addRow(row);
                }
            anitable.setModel(tm);
        }
        cd.close();     //burda veritabanı bağlantısını kapatmıs														//disconnect
    } catch (SQLException ex) {     //burası da veritabanına bağlanamazsa vereceği uyarı için kullanılmıs
            Logger.getLogger(MyQuery.class.getName()).log(Level.SEVERE, null, ex);
    }}
    private updatesanime() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        anipane = new javax.swing.JScrollPane();
        anitable = new javax.swing.JTable();
        updatee = new javax.swing.JButton();
        aniname = new javax.swing.JLabel();
        epnumb = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        anitable.setAutoCreateRowSorter(true);
        anitable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
            }
        ));
        anitable.setMaximumSize(new java.awt.Dimension(2312320, 22320));
        anitable.setMinimumSize(new java.awt.Dimension(1366, 768));
        anitable.setPreferredSize(new java.awt.Dimension(5000, 2500));
        anitable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                anitableMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                anitableMousePressed(evt);
            }
        });
        anipane.setViewportView(anitable);

        updatee.setText("Update Current Episode");
        updatee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(anipane, javax.swing.GroupLayout.DEFAULT_SIZE, 767, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(aniname, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updatee, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(epnumb, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(55, 55, 55))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(anipane)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(updatee, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73)
                .addComponent(aniname, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(epnumb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void anitableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_anitableMouseClicked
/*        JTable source= (JTable)evt.getSource();
        int row= source.rowAtPoint(evt.getPoint());
        int column= source.columnAtPoint(evt.getPoint());

        String linkname= source.getModel().getValueAt(row,1)+"";
        String yazdir=linkname;
        String usersid= gettingid.getText();
        //new denemee(this).setVisible(false);
        new pageofanime(yazdir,usersid).setVisible(true);*/
    }//GEN-LAST:event_anitableMouseClicked

    private void anitableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_anitableMousePressed
       JTable source= (JTable)evt.getSource();
        int row= source.rowAtPoint(evt.getPoint());
        int column= source.columnAtPoint(evt.getPoint());

        String animeninismi= source.getModel().getValueAt(row,0)+"";
        aniname.setText(animeninismi);
        aniname.setVisible(false);

        

        //new denemee(this).setVisible(false);*/

    }//GEN-LAST:event_anitableMousePressed

    private void updateeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateeActionPerformed
       String epnumber=epnumb.getText();
       String animeismi=aniname.getText();
        String sql = "UPDATE anime SET currentep='" + epnumber + "' WHERE animename='" + animeismi + "'";
        try {
            //GET COONECTION
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/anicolle?useUnicode=true&characterEncoding=UTF-8", "afrodeitt", "closemyeyes");
            //STATEMENT
            Statement s = con.prepareStatement(sql);
            //EXECUTE
            s.execute(sql);
           JOptionPane.showMessageDialog(null,"The current episode of "+animeismi+" is updated.");
           
            updatee();
        } catch (SQLException ex) {
           Logger.getLogger(updatesanime.class.getName()).log(Level.SEVERE, null, ex);
            
        }
    }//GEN-LAST:event_updateeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(updatesanime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(updatesanime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(updatesanime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(updatesanime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new updatesanime().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aniname;
    private javax.swing.JScrollPane anipane;
    private javax.swing.JTable anitable;
    private javax.swing.JTextField epnumb;
    private javax.swing.JButton updatee;
    // End of variables declaration//GEN-END:variables
}
